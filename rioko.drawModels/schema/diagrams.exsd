<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="rioko.drawmodels" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="rioko.drawmodels" id="diagrams" name="Diagrams"/>
      </appinfo>
      <documentation>
         This extension point allow to third-party plug-ins to implement the SAMPLER viewer with different kind of representation of models.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="diagram" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="diagram">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="fileExtension" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  This is the unique identifier of this diagram
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  This is the readable name of this diagram.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="node" type="string" use="required">
            <annotation>
               <documentation>
                  This is the nodes class used in the diagram
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="rioko.graphabstraction.diagram.DiagramNode:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="edge" type="string" use="required">
            <annotation>
               <documentation>
                  This is the edges class used in the diagram
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="rioko.graphabstraction.diagram.DiagramEdge:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="compose" type="string" use="required">
            <annotation>
               <documentation>
                  This is the implementation of ComposeDiagramNode used in this diagram.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="rioko.graphabstraction.diagram.ComposeDiagramNode:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="proxy" type="string" use="required">
            <annotation>
               <documentation>
                  This is an implementation of a ProxyDiagramNode extending the DiagramNode class. It is recommended to extend too the &quot;node&quot; class of this diagram, but not strictly neccesary.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="rioko.graphabstraction.diagram.DiagramNode:rioko.graphabstraction.diagram.ProxyDiagramNode"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="reader" type="string" use="required">
            <annotation>
               <documentation>
                  This is the reader used to read this kind of diagrams
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":rioko.drawmodels.filemanage.Reader"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="diagram" type="string" use="required">
            <annotation>
               <documentation>
                  This is the class of ModelDiagram used in this diagram
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="rioko.drawmodels.diagram.ModelDiagram:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="parser" type="string" use="required">
            <annotation>
               <documentation>
                  This is a class implementing the &lt;samp&gt;IdParser&lt;/samp&gt; interface that gives two methods to parser nodes to a new Object injectively. 

This parser could be obtained from a ModelDiagram using the method getIdParser.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":rioko.drawmodels.diagram.IdParser"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="fileExtension">
      <complexType>
         <attribute name="fileExtension" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0.0.qualifier
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
